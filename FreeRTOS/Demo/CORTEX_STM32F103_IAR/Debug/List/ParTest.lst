###############################################################################
#
# IAR ANSI C/C++ Compiler V7.80.4.12462/W32 for ARM       14/May/2018  20:56:16
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#    Command line =  
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
#        -D VECT_TAB_FLASH -D IAR_ARM_CM3 -lcN
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List
#        --diag_suppress Pa082,pe191 -o
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Full.h"
#        -I
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\.\
#        -I
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\STM32F10xFWLib\inc\
#        -I
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\..\Source\include\
#        -I
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\..\common\include\
#        -Ol --use_c++_inline --require_prototypes
#    Locale       =  Chinese (Simplified)_People's Republic of China.936
#    List file    =  
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\List\ParTest.lst
#    Object file  =  
#        C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\Debug\Obj\ParTest.o
#
###############################################################################

C:\Users\gonglt\Downloads\FreeRTOSv10.0.1\FreeRTOS\Demo\CORTEX_STM32F103_IAR\ParTest\ParTest.c
      1          /*
      2           * FreeRTOS Kernel V10.0.1
      3           * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
      4           *
      5           * Permission is hereby granted, free of charge, to any person obtaining a copy of
      6           * this software and associated documentation files (the "Software"), to deal in
      7           * the Software without restriction, including without limitation the rights to
      8           * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
      9           * the Software, and to permit persons to whom the Software is furnished to do so,
     10           * subject to the following conditions:
     11           *
     12           * The above copyright notice and this permission notice shall be included in all
     13           * copies or substantial portions of the Software.
     14           *
     15           * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     16           * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
     17           * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
     18           * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
     19           * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     20           * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
     21           *
     22           * http://www.FreeRTOS.org
     23           * http://aws.amazon.com/freertos
     24           *
     25           * 1 tab == 4 spaces!
     26           */
     27          
     28          /*-----------------------------------------------------------
     29           * Simple parallel port IO routines.
     30           *-----------------------------------------------------------*/
     31          
     32          /* FreeRTOS.org includes. */
     33          #include "FreeRTOS.h"
     34          #include "task.h"
     35          #include "partest.h"
     36          
     37          /* Library includes. */
     38          #include "stm32f10x_lib.h"
     39          
     40          #define partstMAX_OUTPUT_LED	( 4 )
     41          #define partstFIRST_LED			GPIO_Pin_6
     42          
     43          static unsigned short usOutputValue = 0;
     44          
     45          /*-----------------------------------------------------------*/
     46          
     47          void vParTestInitialise( void )
     48          {
     49          GPIO_InitTypeDef GPIO_InitStructure;
     50          
     51          	/* Configure PC.06, PC.07, PC.08 and PC.09 as output push-pull */
     52          	GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6 | GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9;
     53          	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
     54          	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
     55          	GPIO_Init( GPIOC, &GPIO_InitStructure );
     56          }
     57          /*-----------------------------------------------------------*/
     58          
     59          void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
     60          {
     61          unsigned short usBit;
     62          
     63          	vTaskSuspendAll();
     64          	{
     65          		if( uxLED < partstMAX_OUTPUT_LED )
     66          		{
     67          			usBit = partstFIRST_LED << uxLED;
     68          
     69          			if( xValue == pdFALSE )
     70          			{
     71          				usBit ^= ( unsigned short ) 0xffff;
     72          				usOutputValue &= usBit;
     73          			}
     74          			else
     75          			{
     76          				usOutputValue |= usBit;
     77          			}
     78          
     79          			GPIO_Write( GPIOC, usOutputValue );
     80          		}	
     81          	}
     82          	xTaskResumeAll();
     83          }
     84          /*-----------------------------------------------------------*/
     85          
     86          void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
     87          {
     88          unsigned short usBit;
     89          
     90          	vTaskSuspendAll();
     91          	{
     92          		if( uxLED < partstMAX_OUTPUT_LED )
     93          		{
     94          			usBit = partstFIRST_LED << uxLED;
     95          
     96          			if( usOutputValue & usBit )
     97          			{
     98          				usOutputValue &= ~usBit;
     99          			}
    100          			else
    101          			{
    102          				usOutputValue |= usBit;
    103          			}
    104          
    105          			GPIO_Write( GPIOC, usOutputValue );
    106          		}
    107          	}
    108          	xTaskResumeAll();
    109          }
    110          /*-----------------------------------------------------------*/
    111          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   vParTestInitialise
         8   -> GPIO_Init
      16   vParTestSetLED
        16   -> GPIO_Write
        16   -> vTaskSuspendAll
        16   -> xTaskResumeAll
       8   vParTestToggleLED
         8   -> GPIO_Write
         8   -> vTaskSuspendAll
         8   -> xTaskResumeAll


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       2  usOutputValue
      34  vParTestInitialise
      70  vParTestSetLED
      66  vParTestToggleLED

 
   2 bytes in section .bss
 178 bytes in section .text
 
 178 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
